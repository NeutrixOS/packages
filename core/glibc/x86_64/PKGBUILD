#!/hint/bash
# shellcheck disable=SC2034,SC2154,SC2164

# Maintainer: XesaCat <izzie@xesacat.xyz>

pkgname=glibc
pkgver=2.37
pkgrel=1
_commit=7c32cb7dd88cf100b0b412163896e30aa2ee671a
arch=(x86_64)
pkgdesc="GNU C Library"
url="https://www.gnu.org/software/libc"
license=(GPL LGPL)
makedepends=(git gd python)
depends=("linux-api-headers>=4.10" tzdata filesystem)
optdepends=(
        "gd: for memusagestat"
        "perl: for mtrace"
)
install=glibc.install
backup=(
        etc/gai.conf
        etc/locale.gen
        etc/nscd.conf
)
options=(staticlibs !lto)
source=(
        "git+https://sourceware.org/git/glibc.git#commit=${_commit}"
        "locale.gen.txt"
        "locale-gen"
        "sdt.h"
        "sdt-config.h"
        "reenable_DT_HASH.patch"
        "glibc-2.37-fhs-1.patch"
)
validpgpkeys=(
        "7273542B39962DF7B299931416792B4EA25340F8" # Carlos O'Donell
        "BC7C7372637EC10C57D7AA6579C43DFBF1CF2187" # Siddhesh Poyarekar
)
b2sums=(
        "SKIP"
        "c859bf2dfd361754c9e3bbd89f10de31f8e81fd95dc67b77d10cb44e23834b096ba3caa65fbc1bd655a8696c6450dfd5a096c476b3abf5c7e125123f97ae1a72"
        "04fbb3b0b28705f41ccc6c15ed5532faf0105370f22133a2b49867e790df0491f5a1255220ff6ebab91a462f088d0cf299491b3eb8ea53534cb8638a213e46e3"
        "a6a5e2f2a627cc0d13d11a82458cfd0aa75ec1c5a3c7647e5d5a3bb1d4c0770887a3909bfda1236803d5bc9801bfd6251e13483e9adf797e4725332cd0d91a0e"
        "214e995e84b342fe7b2a7704ce011b7c7fc74c2971f98eeb3b4e677b99c860addc0a7d91b8dc0f0b8be7537782ee331999e02ba48f4ccc1c331b60f27d715678"
        "5fdd133c367af2f5454ea1eea7907de12166fb95eb59dbe33eae16aa9e26209b6585972bc1c80e36a0af4bfb04296acaf940ee78cd624cdcbab9669dff46c051"
        "23fc697163a1004e70531ae3c7422e1573280d7e3f64d54ea1676a0e625cf6e50e31ea6728729f58a5fb3c9ff1bb37103e1119d5c94c30155a59f27586a043f9"
)

prepare() {
        mkdir build

        cd glibc

        # Re-enable `--hash-style=both` for building shared objects due to issues with EPIC's EAC
        # which relies on DT_HASH to be present in these libs.
        # reconsider 2023-01
        patch -Np1 -i "${srcdir}/reenable_DT_HASH.patch"

        # Some of the Glibc programs use the non-FHS compliant /var/db directory to store their runtime data.
        # The following patch is applied to make such programs store their runtime data in the FHS-compliant locations.
        patch -Np1 -i "${srcdir}/glibc-2.37-fhs-1.patch"
}

build() {
        cd "${srcdir}/build"

        echo "slibdir=/usr/lib" >>configparms
        echo "rtlddir=/usr/lib" >>configparms
        echo "sbindir=/usr/bin" >>configparms
        echo "rootsbindir=/usr/bin" >>configparms

        # Credits @allanmcrae
        # https://github.com/allanmcrae/toolchain/blob/f18604d70c5933c31b51a320978711e4e6791cf1/glibc/PKGBUILD
        # remove fortify for building libraries
        CFLAGS=${CFLAGS/-Wp,-D_FORTIFY_SOURCE=2/}

        "${srcdir}/glibc/configure" \
                --libdir=/usr/lib \
                --libexecdir=/usr/lib \
                --prefix=/usr \
                --with-headers=/usr/include \
                --with-bugurl=https://bugs.archlinux.org/ \
                --enable-bind-now \
                --enable-cet \
                --enable-kernel=4.4 \
                --enable-multi-arch \
                --enable-stack-protector=strong \
                --enable-systemtap \
                --disable-crypt \
                --disable-profile \
                --disable-werror

        # build libraries with fortify disabled
        echo "build-programs=no" >>configparms
        make -O

        # re-enable fortify for programs
        sed -i "/build-programs=/s#no#yes#" configparms
        echo "CFLAGS += -Wp,-D_FORTIFY_SOURCE=2" >>configparms
        make -O

        # build info pages manually for reproducibility
        make info

        # pregenerate C.UTF-8 locale until it is built into glibc
        # (https://sourceware.org/glibc/wiki/Proposals/C.UTF-8, FS#74864)-
        elf/ld.so --library-path "$PWD" locale/localedef -c -f ../glibc/localedata/charmaps/UTF-8 -i ../glibc/localedata/locales/C ../C.UTF-8/
}

check() {
        cd "${srcdir}/build"

        # adjust/remove buildflags that cause false-positive testsuite failures
        sed -i '/FORTIFY/d' configparms                                   # failure to build testsuite
        sed -i 's/-Werror=format-security/-Wformat-security/' config.make # failure to build testsuite
        sed -i '/CFLAGS/s/-fno-plt//' config.make                         # 16 failures
        sed -i '/CFLAGS/s/-fexceptions//' config.make                     # 1 failure
        LDFLAGS=${LDFLAGS/,-z,now/}                                       # 10 failures

        make -O check
}

package() {
        make -C build install_root="${pkgdir}" install
        rm -f "${pkgdir}"/etc/ld.so.cache

        # Shipped in tzdata
        rm -f "${pkgdir}"/usr/bin/{tzselect,zdump,zic}

        cd glibc

        install -dm755 "${pkgdir}"/usr/lib/{locale,systemd/system,tmpfiles.d}
        install -m644 nscd/nscd.conf "${pkgdir}"/etc/nscd.conf
        install -m644 nscd/nscd.service "${pkgdir}"/usr/lib/systemd/system
        install -m644 nscd/nscd.tmpfiles "${pkgdir}"/usr/lib/tmpfiles.d/nscd.conf
        install -dm755 "${pkgdir}"/var/db/nscd

        install -m644 posix/gai.conf "${pkgdir}"/etc/gai.conf

        install -m755 "${srcdir}"/locale-gen "${pkgdir}"/usr/bin

        # Create /etc/locale.gen
        install -m644 "${srcdir}"/locale.gen.txt "${pkgdir}"/etc/locale.gen
        sed -e '1,3d' -e 's|/| |g' -e 's|\\| |g' -e 's|^|#|g' \
                "${srcdir}"/glibc/localedata/SUPPORTED >>"${pkgdir}"/etc/locale.gen

        # Add SUPPORTED file to pkg
        sed -e '1,3d' -e 's|/| |g' -e 's| \\||g' \
                "${srcdir}"/glibc/localedata/SUPPORTED >"${pkgdir}"/usr/share/i18n/SUPPORTED

        # install C.UTF-8 so that it is always available
        install -dm755 "${pkgdir}"/usr/lib/locale
        cp -r "${srcdir}"/C.UTF-8 -t "${pkgdir}"/usr/lib/locale
        sed -i '/#C\.UTF-8 /d' "${pkgdir}"/etc/locale.gen

        # Provide tracing probes to libstdc++ for exceptions, possibly for other
        # libraries too. Useful for gdb's catch command.
        install -Dm644 "${srcdir}"/sdt.h "${pkgdir}"/usr/include/sys/sdt.h
        install -Dm644 "${srcdir}"/sdt-config.h "${pkgdir}"/usr/include/sys/sdt-config.h
}
